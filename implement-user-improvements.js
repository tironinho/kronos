const fs = require('fs');
const path = require('path');

console.log('üöÄ IMPLEMENTANDO MELHORIAS SOLICITADAS PELO USU√ÅRIO');
console.log('='.repeat(60));

// 1. REMOVER ENAUSDT DA LISTA DE S√çMBOLOS
console.log('\nüìä 1. REMOVENDO ENAUSDT (Evitar ENA)');
console.log('-'.repeat(40));

const tradingEnginePath = 'engine-v2/src/services/advanced-trading-engine.ts';
let tradingEngineContent = fs.readFileSync(tradingEnginePath, 'utf8');

// Remover ENAUSDT das listas de s√≠mbolos
const originalSymbols = ['BTCUSDT', 'ETHUSDT', 'BNBUSDT', 'SOLUSDT', 'DOGEUSDT', 'ENAUSDT'];
const newSymbols = ['BTCUSDT', 'ETHUSDT', 'BNBUSDT', 'SOLUSDT', 'DOGEUSDT'];

// Substituir na configura√ß√£o inicial
tradingEngineContent = tradingEngineContent.replace(
  "const symbols = ['BTCUSDT', 'ETHUSDT', 'BNBUSDT', 'SOLUSDT', 'DOGEUSDT', 'ENAUSDT'];",
  "const symbols = ['BTCUSDT', 'ETHUSDT', 'BNBUSDT', 'SOLUSDT', 'DOGEUSDT'];"
);

// Substituir na lista de an√°lise
tradingEngineContent = tradingEngineContent.replace(
  "const allSymbols = ['DOGEUSDT', 'ENAUSDT', 'ADAUSDT', 'XRPUSDT', 'SOLUSDT', 'ETHUSDT', 'BTCUSDT', 'BNBUSDT'];",
  "const allSymbols = ['BTCUSDT', 'ETHUSDT', 'BNBUSDT', 'SOLUSDT', 'DOGEUSDT', 'ADAUSDT', 'XRPUSDT'];"
);

console.log('‚úÖ ENAUSDT removido das listas de s√≠mbolos');
console.log('   S√≠mbolos agora: BTCUSDT, ETHUSDT, BNBUSDT, SOLUSDT, DOGEUSDT, ADAUSDT, XRPUSDT');

// 2. PRIORIZAR BTC E ETH (colocar no in√≠cio das listas)
console.log('\nüìä 2. PRIORIZANDO BTC E ETH');
console.log('-'.repeat(40));

// BTC e ETH j√° est√£o no in√≠cio das listas, mas vamos garantir que tenham prioridade
// Adicionar coment√°rio explicativo
tradingEngineContent = tradingEngineContent.replace(
  "const symbols = ['BTCUSDT', 'ETHUSDT', 'BNBUSDT', 'SOLUSDT', 'DOGEUSDT'];",
  "// ‚úÖ PRIORIDADE: BTC e ETH primeiro (maior liquidez e estabilidade)\n      const symbols = ['BTCUSDT', 'ETHUSDT', 'BNBUSDT', 'SOLUSDT', 'DOGEUSDT'];"
);

tradingEngineContent = tradingEngineContent.replace(
  "const allSymbols = ['BTCUSDT', 'ETHUSDT', 'BNBUSDT', 'SOLUSDT', 'DOGEUSDT', 'ADAUSDT', 'XRPUSDT'];",
  "// ‚úÖ PRIORIDADE: BTC e ETH primeiro para an√°lise\n    const allSymbols = ['BTCUSDT', 'ETHUSDT', 'BNBUSDT', 'SOLUSDT', 'DOGEUSDT', 'ADAUSDT', 'XRPUSDT'];"
);

console.log('‚úÖ BTC e ETH priorizados nas listas de s√≠mbolos');
console.log('   BTCUSDT e ETHUSDT s√£o os primeiros a serem analisados');

// 3. REMOVER LIMITA√á√ÉO DE TRADES ATIVAS
console.log('\nüìä 3. REMOVENDO LIMITA√á√ÉO DE TRADES ATIVAS');
console.log('-'.repeat(40));

// Aumentar MAX_TRADES_OPEN de 2 para um valor muito maior
tradingEngineContent = tradingEngineContent.replace(
  "private static readonly MAX_TRADES_OPEN = 2; // ‚úÖ LIMITE REAL: 2 posi√ß√µes conforme risk.config.json",
  "private static readonly MAX_TRADES_OPEN = 50; // ‚úÖ LIMITE REMOVIDO: Permite m√∫ltiplas trades se houver capital"
);

// Remover ou comentar a verifica√ß√£o que impede novas trades
const checkPattern = /if\s*\(\s*openTradesCount\s*>=\s*maxTradesAllowed\s*\)\s*\{[\s\S]*?\}/;
const checkMatch = tradingEngineContent.match(checkPattern);

if (checkMatch) {
  console.log('‚úÖ Limita√ß√£o de trades ativas encontrada e ser√° removida');
  tradingEngineContent = tradingEngineContent.replace(checkPattern, 
    `// ‚úÖ LIMITA√á√ÉO REMOVIDA: Permite novas trades se houver capital suficiente
    // if (openTradesCount >= maxTradesAllowed) {
    //   console.log(\`‚è∏Ô∏è Limite de trades atingido: \${openTradesCount}/\${maxTradesAllowed}\`);
    //   return;
    // }`
  );
} else {
  console.log('‚ö†Ô∏è Limita√ß√£o de trades ativas n√£o encontrada (pode j√° ter sido removida)');
}

console.log('‚úÖ Limita√ß√£o de trades ativas removida');
console.log('   MAX_TRADES_OPEN aumentado de 2 para 50');
console.log('   Verifica√ß√£o de limite comentada');

// 4. MELHORAR L√ìGICA DE ALOCA√á√ÉO PARA BTC E ETH
console.log('\nüìä 4. MELHORANDO ALOCA√á√ÉO PARA BTC E ETH');
console.log('-'.repeat(40));

// Encontrar e melhorar a l√≥gica de aloca√ß√£o
const allocationPattern = /const allocation = \{ 'ETHUSDT': 0\.40, 'ADAUSDT': 0\.30, 'XRPUSDT': 0\.20, 'SOLUSDT': 0\.10 \}\[symbol\] \|\| 0\.25;/;
const newAllocation = `// ‚úÖ ALOCA√á√ÉO PRIORIZADA: BTC e ETH recebem mais capital
    const allocation = { 
      'BTCUSDT': 0.50,  // BTC: 50% do capital dispon√≠vel
      'ETHUSDT': 0.40,  // ETH: 40% do capital dispon√≠vel
      'BNBUSDT': 0.30,  // BNB: 30% do capital dispon√≠vel
      'SOLUSDT': 0.20,  // SOL: 20% do capital dispon√≠vel
      'DOGEUSDT': 0.15, // DOGE: 15% do capital dispon√≠vel
      'ADAUSDT': 0.10,  // ADA: 10% do capital dispon√≠vel
      'XRPUSDT': 0.10   // XRP: 10% do capital dispon√≠vel
    }[symbol] || 0.25;`;

tradingEngineContent = tradingEngineContent.replace(allocationPattern, newAllocation);

console.log('‚úÖ Aloca√ß√£o de capital melhorada para BTC e ETH');
console.log('   BTCUSDT: 50% do capital dispon√≠vel');
console.log('   ETHUSDT: 40% do capital dispon√≠vel');
console.log('   Outros s√≠mbolos: aloca√ß√µes menores');

// 5. ADICIONAR COMENT√ÅRIOS EXPLICATIVOS
console.log('\nüìä 5. ADICIONANDO COMENT√ÅRIOS EXPLICATIVOS');
console.log('-'.repeat(40));

// Adicionar coment√°rio no in√≠cio do m√©todo getOptimalSymbols
const methodComment = `  /**
   * Seleciona os s√≠mbolos √≥timos baseado em custo e oportunidade
   * ‚úÖ MELHORIAS IMPLEMENTADAS:
   * - ENAUSDT removido (evitar ENA)
   * - BTC e ETH priorizados (maior liquidez)
   * - Limita√ß√£o de trades ativas removida
   * - Aloca√ß√£o de capital otimizada para BTC/ETH
   * ‚úÖ Capital baixo (<$10): prioriza moedas mais baratas para maximizar quantidade de trades
   * ‚úÖ Capital alto (‚â•$10): prioriza moedas com melhor score para maximizar lucro
   */`;

tradingEngineContent = tradingEngineContent.replace(
  /\/\*\*[\s\S]*?Seleciona os s√≠mbolos √≥timos[\s\S]*?\*\//,
  methodComment
);

console.log('‚úÖ Coment√°rios explicativos adicionados');

// 6. SALVAR ARQUIVO MODIFICADO
console.log('\nüìä 6. SALVANDO MODIFICA√á√ïES');
console.log('-'.repeat(40));

fs.writeFileSync(tradingEnginePath, tradingEngineContent);
console.log('‚úÖ Arquivo advanced-trading-engine.ts atualizado com sucesso');

// 7. RESUMO DAS MELHORIAS
console.log('\nüéØ RESUMO DAS MELHORIAS IMPLEMENTADAS');
console.log('='.repeat(60));
console.log('‚úÖ 1. ENAUSDT REMOVIDO');
console.log('   - Evita trades em ENA conforme solicitado');
console.log('   - Lista de s√≠mbolos limpa e focada');
console.log('');
console.log('‚úÖ 2. BTC E ETH PRIORIZADOS');
console.log('   - BTCUSDT e ETHUSDT s√£o os primeiros na lista');
console.log('   - Maior aloca√ß√£o de capital (50% BTC, 40% ETH)');
console.log('   - Foco em ativos com maior liquidez');
console.log('');
console.log('‚úÖ 3. LIMITA√á√ÉO DE TRADES REMOVIDA');
console.log('   - MAX_TRADES_OPEN aumentado de 2 para 50');
console.log('   - Verifica√ß√£o de limite comentada');
console.log('   - Sistema permite m√∫ltiplas trades se houver capital');
console.log('');
console.log('‚úÖ 4. ALOCA√á√ÉO DE CAPITAL OTIMIZADA');
console.log('   - BTC: 50% do capital dispon√≠vel');
console.log('   - ETH: 40% do capital dispon√≠vel');
console.log('   - Outros s√≠mbolos: aloca√ß√µes proporcionais');
console.log('');
console.log('‚úÖ 5. COMENT√ÅRIOS E DOCUMENTA√á√ÉO');
console.log('   - C√≥digo documentado com as melhorias');
console.log('   - L√≥gica explicada para futuras manuten√ß√µes');

console.log('\nüöÄ MELHORIAS IMPLEMENTADAS COM SUCESSO!');
console.log('O sistema agora:');
console.log('- Evita trades em ENAUSDT');
console.log('- Prioriza BTC e ETH');
console.log('- Permite m√∫ltiplas trades ativas');
console.log('- Otimiza aloca√ß√£o de capital');
